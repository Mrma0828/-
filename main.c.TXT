#include <stdio.h>
#include <stdlib.h>
操作符（只能作用于整数）

一.移动操作符

1.右操作符~
int main()
{
    int a = -1;
    int b = a >> 1;
    printf("%d\n",b);
}
结果为 -1  为算数右移
实验一 算数操作符有两种方式--算数右移，逻辑右移
给-1 的二进制位补码1111111111111111111111111111111
右移一位 如果为-1 则为右移补原符号位  为算数右移
         如果为1  则为右移补0         为逻辑右移

结果 算数右移  缺失位补原符号



//2.左操作符~
int main()
{
    int a = 5;      //000000000000000000000101    5
    int b = a << 1;   //000000000000000000001010   10
    printf("%d",b);
    return 0;
}
//实验结果 缺失位补0



//不可移动负数位


二 位操作符 1.按位与&  2.按位或|3.按位异或^


int main()
{
    int a = 3;//011
    int b = 5;//101
    int c = a&b;//001  非黑即白
    int d = a|b;//111  有白全白
    int e = a^b;//001  相异即白
    printf("%d%d%d",c,d,e);




    return 0;
}


//面试题 在没有其他变量的情况下交换a，b的值
//1.加减法  （缺点 有可能溢出）
int main()
{
    int a = 3;
    int b = 5;
    a = a + b ; //8 = 3+5
    b = a - b ; //3 = 8-5
    a = a - b;  //5 = 8-3
    printf("%d %d",a,b);
    return 0 ;


}


2.异或交换法(平常用变量交换法 这个不常用)
int main()
{
    int a = 3;//011
    int b = 5;//101
    a = a^b;//110
    b = a^b;//011
    a = a^b;//101
    printf("%d %d",a,b);
    return 0;
}



面试题 编写代码 求一个整数在内存中二进制 1的个数
int main()//想得到十进制123的每位数- %10--得3 然后/10再%10得2   /10再%10得1
{
    int num=0;
    int i =0;
    int count=0;//想得到二进制123的每位数- %2--得 然后/2再%2得    /2再%2得
    scanf("%d",&num);
//    while(num)
//    {
//        if(num%2==1)
//            count++;
//        num = num/2;//如果是负数 不可执行
//    }
    for(i=0;i<32;i++)  //将num补码每位右移与000000000000001与
    {
        if(1==((num>>i)&1))
        {
            count++;
        }

    }

    printf("%d",count);
    return 0;
}


三 赋值操作符（ = 右边值赋予左边）

复合赋值符
int main()
{
    int a =10;
    int b =5;
    a = a + 5;
    a += 5;//复合表达

    a = a << 1;
    a <<= 1;//复合表达

    a = a / 5;
    a /= 5;//复合表达

    return 0;

}

